/*! RTT.gl v1.0.0 | (c) 2015 Johann Troendle | https://github.com/JoTrdl/rtt.gl */
(function(p){var k={createProgram:function(a,b,c){var d,e,g=a.createProgram();try{d=this.compileShader(a,b,a.VERTEX_SHADER),e=this.compileShader(a,c,a.FRAGMENT_SHADER)}catch(f){throw a.deleteProgram(g),f;}a.attachShader(g,d);a.deleteShader(d);a.attachShader(g,e);a.deleteShader(e);a.linkProgram(g);return g},compileShader:function(a,b,c){c=a.createShader(c);a.shaderSource(c,b);a.compileShader(c);if(!a.getShaderParameter(c,a.COMPILE_STATUS)){b=a.getShaderSource(c).split("\n");for(var d="",e=0;e<b.length;e++)d+=
e+1+"."+b[e]+"\n";throw"GLSL Compilation Error:\n"+a.getShaderInfoLog(c)+"\n"+d;}return c},createTexture:function(a,b,c,d){var e=d&&d.type||a.UNSIGNED_BYTE,g=d&&d.minFilter||a.NEAREST,f=d&&d.magFilter||a.NEAREST,k=d&&d.wrapS||a.CLAMP_TO_EDGE;d=d&&d.wrapT||a.CLAMP_TO_EDGE;var h=a.createTexture();a.bindTexture(a.TEXTURE_2D,h);a.texImage2D(a.TEXTURE_2D,0,a.RGBA,b,c,0,a.RGBA,e,null);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,f);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,g);a.texParameteri(a.TEXTURE_2D,
a.TEXTURE_WRAP_S,k);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,d);a.bindTexture(a.TEXTURE_2D,null);return h}},m=new Float32Array([-1,-1,1,-1,-1,1,1,-1,1,1,-1,1]),n=m.length/2,h=function(a,b,c,d,e,g){b=a.getUniformLocation(b,d);if(null!==e&&b)if(d=[b],e.length?d=d.concat(e):d.push(e),g)if(c.call(a,b,e),g.length)for(c=0;c<g.length;c++)a.activeTexture(a.TEXTURE0+e[c]),a.bindTexture(a.TEXTURE_2D,g[c]);else a.activeTexture(a.TEXTURE0+e),a.bindTexture(a.TEXTURE_2D,g);else c.apply(a,d)},l=function(a,
b,c,d,e,g){b=a.getAttribLocation(b,c);0>b||(a.bindBuffer(a.ARRAY_BUFFER,e),a.bufferData(a.ARRAY_BUFFER,g,a.STATIC_DRAW),a.enableVertexAttribArray(b),a.vertexAttribPointer(b,d,a.FLOAT,!1,0,0))},f=function(a,b){this.options=b||{};(this.gl=a)&&this.gl instanceof WebGLRenderingContext?(this.width=this.options.width||a.canvas.width,this.height=this.options.height||a.canvas.height,this.viewportWidth=this.options.viewportWidth||a.canvas.width,this.viewportHeight=this.options.viewportHeight||a.canvas.height,
this.reset(!0)):console.log("Error, paramater [gl] must be a WebGL context")};f.prototype.resize=function(a){var b=this.gl;this.width=a&&a.width||b.canvas.width;this.height=a&&a.height||b.canvas.height;this.viewportWidth=a&&a.viewportWidth||b.canvas.width;this.viewportHeight=a&&a.viewportHeight||b.canvas.height;for(a=0;a<this.textures.length;a++){var c=this.options.texture&&this.options.texture.type||b.UNSIGNED_BYTE;b.bindTexture(b.TEXTURE_2D,this.textures[a]);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,this.width,
this.height,0,b.RGBA,c,null)}for(a=0;a<this.history.length;a++)c=this.options.texture&&this.options.texture.type||b.UNSIGNED_BYTE,b.bindTexture(b.TEXTURE_2D,this.history[a]),b.texImage2D(b.TEXTURE_2D,0,b.RGBA,this.width,this.height,0,b.RGBA,c,null);return this};f.prototype.reset=function(a){var b=this.gl;if(!a){for(a=0;a<this.textures.length;a++)b.deleteTexture(this.textures[a]);for(a=0;a<this.shaders.length;a++)b.deleteProgram(this.shaders[a]);b.deleteFramebuffer(this.frameBuffer);b.deleteBuffer(this.geometryBuffer);
for(a=0;a<this.history.length;a++)b.deleteTexture(this.history[a])}this.shaders=[];this.attributes=[];this.uniforms=[];this.frameBuffer=b.createFramebuffer();this.textures=[k.createTexture(b,this.width,this.height,this.options.texture),k.createTexture(b,this.width,this.height,this.options.texture)];this.history=Array(this.options.history+1||0);for(a=0;a<this.history.length;a++)this.history[a]=k.createTexture(b,this.width,this.height,this.options.texture);this.renderIndex=0;this.quadBuffer=b.createBuffer();
this.paintShader=k.createProgram(b,"attribute vec2 position;\nvarying vec2 vUv;\nvoid main() {\nvUv =  position;\nvec2 vPos = position * 2.0 - 1.0;\ngl_Position = vec4(vPos.x, vPos.y, 0, 1);\n}","precision highp float;\nuniform sampler2D tSampler;\nvarying vec2 vUv;\nvoid main() {\n  gl_FragColor = texture2D(tSampler, vUv);\n}");b.bindBuffer(b.ARRAY_BUFFER,this.quadBuffer);this.quadVertices=new Float32Array(m);this.geometryBuffer=this.quadBuffer;this.vertices=this.quadVertices;this.geometry=[b.TRIANGLE_STRIP,
0,n];this.options.geometry&&(this.geometryBuffer=b.createBuffer(),this.vertices=this.options.geometry.shift(),this.geometry=this.options.geometry);return this};f.prototype.fragment=function(a,b){return this.vertexFragment("attribute vec2 position;\nvarying vec2 vUv;\nvoid main() {\nvUv =  position;\nvec2 vPos = position * 2.0 - 1.0;\ngl_Position = vec4(vPos.x, vPos.y, 0, 1);\n}",a,b)};f.prototype.vertexFragment=function(a,b,c,d){a=k.createProgram(this.gl,a,b);this.shaders.push(a);this.uniforms.push(c);
for(var e in d)d[e].buffer=gl.createBuffer();this.attributes.push(d);return this};f.prototype.render=function(){var a=this.gl,b,c,d,e;for(c=0;c<this.shaders.length;c++){d=0;this.renderIndex=(this.renderIndex+1)%2;b=this.output;this.output=this.textures[this.renderIndex];this.history.length&&c==this.shaders.length-1&&(this.history.unshift(this.history.pop()),this.output=this.history[0]);a.useProgram(this.shaders[c]);a.bindFramebuffer(a.FRAMEBUFFER,this.frameBuffer);a.framebufferTexture2D(a.FRAMEBUFFER,
a.COLOR_ATTACHMENT0,a.TEXTURE_2D,this.output,0);l(a,this.shaders[c],"position",2,this.geometryBuffer,this.vertices);e=this.attributes[c]||{};for(var g in e)l(a,this.shaders[c],g,e[g].size,e[g].buffer,e[g].data);h(a,this.shaders[c],a.uniform1i,"tSampler",d,b);d++;b=this.uniforms[c]||{};for(var f in b)"t"==b[f].type?(h(a,this.shaders[c],a.uniform1i,f,d,b[f].value),d++):h(a,this.shaders[c],a["uniform"+b[f].type],f,b[f].value);if(this.history.length){e=[];for(b=1;b<this.history.length;b++)e.push(++d);
h(a,this.shaders[c],a.uniform1iv,"tHistory",e,this.history.slice(1))}a.viewport(0,0,this.width,this.height);a.drawArrays.apply(a,this.geometry)}return this};f.prototype.iterate=function(a){for(var b=this.shaders[this.shaders.length-1],c=this.uniforms[this.uniforms.length-1],d=0;d<a;d++)this.shaders.push(b),this.uniforms.push(c);return this};f.prototype.swap=function(){var a=this.textures[0];this.textures[0]=this.textures[1];this.textures[1]=a;return this};f.prototype.clear=function(){if(!this.output)return this;
var a=this.gl;a.bindFramebuffer(a.FRAMEBUFFER,this.frameBuffer);a.clear(a.COLOR_BUFFER_BIT|a.DEPTH_BUFFER_BIT|a.STENCIL_BUFFER_BIT);return this};f.prototype.paint=function(){if(!this.output)return console.log("Error: no output to paint. Call render() at least once."),this;var a=this.gl;a.useProgram(this.paintShader);a.bindFramebuffer(a.FRAMEBUFFER,null);l(a,this.paintShader,"position",2,this.quadBuffer,this.quadVertices);h(a,this.paintShader,a.uniform1i,"tSampler",0,this.output);a.viewport(0,0,this.viewportWidth,
this.viewportHeight);a.drawArrays(a.TRIANGLE_STRIP,0,n);return this};p.RTT=f})(window);